//package bank.zhonghangxin;
//
//import cn.hutool.core.util.StrUtil;
//import cn.hutool.crypto.SmUtil;
//import cn.hutool.crypto.symmetric.SymmetricCrypto;
//import cn.hutool.json.JSONUtil;
//import com.alibaba.fastjson.JSON;
//import com.alibaba.fastjson.JSONObject;
//import com.open.sdk.aes.utils.GMUtils;
//import com.travelsky.atc.client.ClientConfig;
//import com.travelsky.atc.client.GatewayClient;
//import com.travelsky.atc.client.SecretKeyPackage;
//import com.travelsky.atc.exception.SignException;
//import com.travelsky.atc.exception.VerifyException;
//import com.travelsky.atc.invoice.*;
//import com.travelsky.atc.sign.ISign;
//import com.travelsky.atc.sign.Sign;
//import com.travelsky.atc.sign.SignResult;
//import com.travelsky.atc.verify.IVerify;
//import com.travelsky.atc.verify.Verify;
////import com.travelsky.ebuild.clientapi.rpt.cancelElectronicItinerar.ElectronicItineraryCancel;
////import com.travelsky.ebuild.clientapi.rpt.cancelElectronicItinerary.ElectronicItineraryOverDueCancel;
////import com.travelsky.ebuild.clientapi.rpt.cancelElectronicItinerary.req.CancelReqInfo;
////import com.travelsky.ebuild.clientapi.rpt.getElectronicIssueResult.ElectronicItineraryPrintResultGet;
////import com.travelsky.ebuild.clientapi.rpt.previewElectronicItinerary.ElectronicItineraryPreview;
////import com.travelsky.ebuild.clientapi.rpt.previewElectronicItinerary.req.PrintReqInfo;
////import com.travelsky.ebuild.clientapi.rpt.previewElectronicItinerary.res.ResInfos;
////import com.travelsky.ebuild.clientapi.rpt.printElectronicItinerary.ElectronicItineraryOverDuePrint;
////import com.travelsky.ebuild.clientapi.rpt.printElectronicItinerary.ElectronicItineraryPrint;
////import com.travelsky.ebuild.clientapi.rpt.printElectronicItinerary.res.Response;
////import com.travelsky.ebuild.clientapi.rpt.printElectronicItinerary.res.Result;
////import com.travelsky.ebuild.clientapi.rpt.queryElectronicItinerary.ElectronicItineraryQuery;
////import com.travelsky.ebuild.clientapi.rpt.queryElectronicItinerary.req.QueryReqInfo;
//
//
//
//import javax.crypto.Cipher;
//import javax.crypto.Mac;
//import javax.crypto.spec.IvParameterSpec;
//import javax.crypto.spec.SecretKeySpec;
//import java.io.*;
//import java.math.BigInteger;
//import java.nio.charset.StandardCharsets;
//import java.security.*;
//import java.security.cert.CertificateException;
//import java.security.spec.AlgorithmParameterSpec;
//import java.text.ParseException;
//import java.text.SimpleDateFormat;
//import java.util.*;
//
//
//import http.HttpUtils;
//import jakarta.mail.BodyPart;
//import jakarta.mail.internet.MimeMultipart;
//import jakarta.mail.util.ByteArrayDataSource;
//import jakarta.mail.util.SharedByteArrayInputStream;
//import org.apache.xml.security.Init;
//import org.apache.xml.security.encryption.EncryptedData;
//import org.apache.xml.security.encryption.EncryptedKey;
//import org.apache.xml.security.encryption.XMLCipher;
//import org.apache.xml.security.keys.KeyInfo;
//import org.apache.xml.security.keys.content.X509Data;
//import org.apache.xml.security.keys.content.x509.XMLX509Certificate;
//import org.apache.xml.security.keys.content.x509.XMLX509IssuerSerial;
//import org.apache.xml.security.signature.XMLSignature;
//import org.apache.xml.security.transforms.Transforms;
//import org.apache.xml.security.utils.Constants;
//import org.apache.xml.security.utils.ElementProxy;
//import org.w3c.dom.Document;
//import org.w3c.dom.Element;
//import org.w3c.dom.Node;
//import org.w3c.dom.NodeList;
//import org.xml.sax.InputSource;
//
//import javax.crypto.Cipher;
//import javax.crypto.KeyGenerator;
//import javax.crypto.SecretKeyFactory;
//import javax.crypto.spec.DESedeKeySpec;
//import javax.crypto.spec.IvParameterSpec;
//import javax.xml.bind.DatatypeConverter;
//import javax.xml.parsers.DocumentBuilder;
//import javax.xml.parsers.DocumentBuilderFactory;
//import javax.xml.transform.OutputKeys;
//import javax.xml.transform.Transformer;
//import javax.xml.transform.TransformerFactory;
//import javax.xml.transform.dom.DOMSource;
//import javax.xml.transform.stream.StreamResult;
//import javax.xml.xpath.XPath;
//import javax.xml.xpath.XPathConstants;
//import javax.xml.xpath.XPathFactory;
//import java.io.ByteArrayInputStream;
//import java.io.StringReader;
//import java.io.StringWriter;
//import java.nio.charset.Charset;
//import java.nio.file.Files;
//import java.nio.file.Paths;
//import java.security.Key;
//import java.security.cert.CertificateException;
//import java.security.cert.CertificateFactory;
//import java.security.cert.X509Certificate;
//import java.security.spec.PKCS8EncodedKeySpec;
//
//import static com.itrus.base.CAConstant.RSA_SIGNATURE_ALGORITHM;
//import static com.itrus.base.CAConstant.SM2_SIGNATURE_ALGORITHM;
//
//import com.itrus.util.Base64;
//import sun.misc.BASE64Decoder;
//
//
///**
// * @author jiaoxian
// * @name bank.zhonghangxin
// * @date 2023/7/26 17:48
// * @description TODO
// */
//public class ZhongHangXin {
//
//
//    private final ClientConfig clientConfig = new ClientConfig();
//
//    private final Invoice invoice = new Invoice();
//
//    public SignResult test() {
//
//
//
//        init();
//        Sign sign = new Sign();
//        try {
//            System.out.println(JSON.toJSONString(invoice));
//            System.out.println(JSON.toJSONString(clientConfig));
//            SignResult signResult = sign.sign(invoice, clientConfig);
//            System.out.println(JSON.toJSONString(signResult));
///*
//            try {
//                writeFile(signResult.getOfdStream());
//            } catch (Exception e) {
//                System.out.println(e);
//            }
//*/
//            String certificate = "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";
//            Verify verify = new Verify();
//            boolean flag = verify.verify(invoice, signResult.getSignature(), certificate);
//            System.out.println(flag);
//        } catch (SignException e) {
//            throw new RuntimeException(e);
//        } catch (Exception e) {
//            System.out.println(e.getMessage());
//        }
//        return new SignResult();
//    }
//
//    public void init() {
//        String privateKey = "-----BEGIN PRIVATE KEY-----\n" +
//                "MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgsneen45BQ4s1H6C3\n" +
//                "foN6YqjpjjkqCeavfANapuyR8TWhRANCAAQpvpwuw/xCWKeJpgnWB09s8L/RymWi\n" +
//                "/Zd8dkvqlqKBuaErgsAUDUXyajvI1ZOzgPHfcv0aPAGMh3r4rbwGfpyf\n" +
//                "-----END PRIVATE KEY-----";
//
//        String cert = "-----BEGIN CERTIFICATE-----\n" +
//                "MIICizCCAjGgAwIBAgIUVsYHi/AsU/7InycdVtK9JCA1AiMwCgYIKoZIzj0EAwIw\n" +
//                "ZjELMAkGA1UEBhMCQ04xETAPBgNVBAgTCEJlaSBKaW5nMREwDwYDVQQHEwhCZWkg\n" +
//                "SmluZzEWMBQGA1UEChMNc2dlYy5zZ2VjLmNvbTEZMBcGA1UEAxMQY2Euc2dlYy5z\n" +
//                "Z2VjLmNvbTAgFw0yMzA4MDIwMzU3MDBaGA8yMDczMDcyMDAzNTcwMFowIzEPMA0G\n" +
//                "A1UECxMGY2xpZW50MRAwDgYDVQQDEwd5b25neW91MFkwEwYHKoZIzj0CAQYIKoZI\n" +
//                "zj0DAQcDQgAEKb6cLsP8QliniaYJ1gdPbPC/0cplov2XfHZL6paigbmhK4LAFA1F\n" +
//                "8mo7yNWTs4Dx33L9GjwBjId6+K28Bn6cn6OB/TCB+jAOBgNVHQ8BAf8EBAMCB4Aw\n" +
//                "DAYDVR0TAQH/BAIwADAdBgNVHQ4EFgQUOhQBQMNenssxlSB8VxdaUxfu5eYwHwYD\n" +
//                "VR0jBBgwFoAUo8AmeaAuWouDilM3lb62J6tvNogwHwYDVR0RBBgwFoIUYmNwLTc3\n" +
//                "NzY2YjQ4YjgtODV6NjkweQYIKgMEBQYHCAEEbXsiYXR0cnMiOnsiY24iOiJ5b25n\n" +
//                "eW91IiwiaGYuQWZmaWxpYXRpb24iOiIiLCJoZi5FbnJvbGxtZW50SUQiOiJ5b25n\n" +
//                "eW91IiwiaGYuVHlwZSI6ImNsaWVudCIsIm5hbWUiOiLnlKjlj4sifX0wCgYIKoZI\n" +
//                "zj0EAwIDSAAwRQIhAIxDs4znxQfpZJHNsX1TevBC/o4dQ9ZUFUjPoFKqB6/SAiAs\n" +
//                "zGWVQXQ/NN8Y39EPha8VHi5tdo335s4sC1ZNjLRgaA==\n" +
//                "-----END CERTIFICATE-----";
//
//        String cacert = "-----BEGIN CERTIFICATE-----\n" +
//                "MIICFTCCAbugAwIBAgIUD2zNbciDuMcaLDZH+WWE9tpHzgAwCgYIKoZIzj0EAwIw\n" +
//                "ZjELMAkGA1UEBhMCQ04xETAPBgNVBAgTCEJlaSBKaW5nMREwDwYDVQQHEwhCZWkg\n" +
//                "SmluZzEWMBQGA1UEChMNc2dlYy5zZ2VjLmNvbTEZMBcGA1UEAxMQY2Euc2dlYy5z\n" +
//                "Z2VjLmNvbTAgFw0yMzA4MDIwMzU3MDBaGA8yMDczMDcyMDAzNTcwMFowZjELMAkG\n" +
//                "A1UEBhMCQ04xETAPBgNVBAgTCEJlaSBKaW5nMREwDwYDVQQHEwhCZWkgSmluZzEW\n" +
//                "MBQGA1UEChMNc2dlYy5zZ2VjLmNvbTEZMBcGA1UEAxMQY2Euc2dlYy5zZ2VjLmNv\n" +
//                "bTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABCsdzKCSJEWM2XGuXK8pYkY4AjKb\n" +
//                "TfTNyKvygwBh1UcgYMYoEWFb0h0EY0SJItulSw9kcGujskI+NmJvXuIMKDmjRTBD\n" +
//                "MA4GA1UdDwEB/wQEAwIBBjASBgNVHRMBAf8ECDAGAQH/AgEBMB0GA1UdDgQWBBSj\n" +
//                "wCZ5oC5ai4OKUzeVvrYnq282iDAKBggqhkjOPQQDAgNIADBFAiEAzGARfTuJXvQf\n" +
//                "AaLKzAyKFcU5phK3NKNAhS4MljHbEZUCIDvp13KdqJbXmXMjZAjOAL6x7vApDqw4\n" +
//                "chnPlLmMtWZe\n" +
//                "-----END CERTIFICATE-----";
//
//        SecretKeyPackage secretKeyPackage = new SecretKeyPackage();
//        secretKeyPackage.setPrivateKey(privateKey);
//        secretKeyPackage.setCertificate(cert);
//        List<String> cacertsList = new ArrayList<>();
//        cacertsList.add(cacert);
//        secretKeyPackage.setCaCerts(cacertsList);
//        clientConfig.setSecretKeyPackage(secretKeyPackage);
//        clientConfig.setGatewayURL("https://chainsky.travelsky.com.cn/gateway/v3");
//        clientConfig.setSm4Key("abcdrfgijklmnopq");
//        clientConfig.setTimeout(6000000);
//
//        HeaderInformation headerInformation = new HeaderInformation();
//        headerInformation.setElectronicInvoiceAirTransportReceiptNumber("electronicInvoiceAirTransportReceiptNumber");
//        headerInformation.setIssuingStatus("issuingStatus");
//        headerInformation.setMarkingOfDomesticOrInternational("markingOfDomesticOrInternational");
//        headerInformation.setNumberOfGpOrder("numberOfGpOrder");
//        headerInformation.setQrCode("qrCode");
//        invoice.setHeaderInformation(headerInformation);
//
//        OtherInformation otherInformation = new OtherInformation();
//        otherInformation.setAgentCode("agentCode");
//        otherInformation.seteTicketNumber("ticketNumber");
//        otherInformation.setPromptInformation("promptInformation");
//        otherInformation.setInsurance(0L);
//        otherInformation.setIssueDate("issueDate");
//        otherInformation.setIssueParty("issueParty");
//        otherInformation.setNameOfSeller("nameOfSeller");
//        otherInformation.setVerificationCode("verificationCode");
//        invoice.setOtherInformation(otherInformation);
//
//        PassengerInformation passengerInformation = new PassengerInformation();
//        passengerInformation.setCurrency("currency");
//        List<AirTicket> airTicketList = new ArrayList<>();
//        AirTicket airTicket = new AirTicket();
//        airTicket.setCarrier("carrier");
//        airTicket.setCarrierDate("carrierDate");
//        airTicket.setDepartureStation("departureStation");
//        airTicket.setDepartureTime("departureTime");
//        airTicket.setDestinationStation("destinationStation");
//        airTicket.setEffectiveDate("effectiveDate");
//        airTicket.setExpirationDate("expirationDate");
//        airTicket.setFareBasis("fareBasis");
//        airTicket.setFlight("flight");
//        airTicket.setFlightSegment(123);
//        airTicket.setFreeBaggageAllowance("freeBaggageAllowance");
//        airTicket.setSeatClass("seatClass");
//        airTicketList.add(airTicket);
//        passengerInformation.setDetailInformationOfAirTicketTuple(airTicketList);
//        passengerInformation.setPassengerName("passengerName");
//        passengerInformation.setEndorsement("endorsement");
//        passengerInformation.setCivilAviationDevelopmentFund(0L);
//        passengerInformation.setFare(0L);
//        passengerInformation.setFuelSurcharge(0L);
//        passengerInformation.setOtherTaxes(0L);
//        passengerInformation.setTotalAmount(0L);
//        passengerInformation.setValidIdNumber("validIdNumber");
//        passengerInformation.setVatRateString(0L);
//        passengerInformation.setVatTaxAmount(0L);
//        invoice.setPassengerInformation(passengerInformation);
//
//        PurchaserInformation purchaserInformation = new PurchaserInformation();
//        purchaserInformation.setNameOfPurchaser("nameOfPurchaser");
//        purchaserInformation.setUnifiedSocialCreditCodeOfPurchaser("unifiedSocialCreditCodeOfPurchaser");
//        invoice.setPurchaserInformation(purchaserInformation);
//
//        RedReceiptInformation redReceiptInformation = new RedReceiptInformation();
//        redReceiptInformation.setReasonOfRushRed("reasonOfRushRed");
//        redReceiptInformation.setOriginalElectronicInvoiceAirTransportReceiptNumber("originalElectronicInvoiceAirTransportReceiptNumber");
//        invoice.setRedReceiptInformation(redReceiptInformation);
//    }
//
//    public void writeFile(InputStream inputStream) throws IOException {
//        InputStream stream = inputStream;
//        File file = File.createTempFile("test3", "zhonghangxin.ofd");
//        System.out.println(file.getPath());
//        System.out.println(file.getName());
//        OutputStream os = new FileOutputStream(file);
//
//        int bytesRead = 0;
//        byte[] buffer = new byte[8192];
//        while ((bytesRead = stream.read(buffer, 0, 8192)) != -1) {
//            os.write(buffer, 0, bytesRead);
//        }
//        os.close();
//        stream.close();
//
//    }
//
//    private static byte[] parseDERFromPEM(byte[] pem, String beginDelimiter, String endDelimiter) {
//        String data = new String(pem);
//        String[] tokens = data.split(beginDelimiter);
//        tokens = tokens[1].split(endDelimiter);
//        return DatatypeConverter.parseBase64Binary(tokens[0]);
//    }
//
//    private static X509Certificate generateCertificateFromDER(byte[] certBytes) throws CertificateException {
//        CertificateFactory factory = CertificateFactory.getInstance("X.509");
//        return (X509Certificate) factory.generateCertificate(new ByteArrayInputStream(certBytes));
//    }
//
//    public String payloadSignEncryption(String payload, String signMerPrvKeyPath, String signMerPubKeyPath, String encryptionBankPubPath) throws Exception {
//        // 初始化
//        Init.init();
//        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
//        factory.setNamespaceAware(true);
//        DocumentBuilder builder = factory.newDocumentBuilder();
//        Document xmlDoc = builder.parse(new InputSource(new StringReader(payload)));
//        // 加载签名证书
//        byte[] keyByte = Files.readAllBytes(Paths.get(signMerPrvKeyPath));
//        byte[] keyBytes = parseDERFromPEM(keyByte, "-----BEGIN PRIVATE KEY-----", "-----END PRIVATE KEY-----");
//        PKCS8EncodedKeySpec spec = new PKCS8EncodedKeySpec(keyBytes);
//        KeyFactory kf = KeyFactory.getInstance("RSA");
//        PrivateKey privateKey = kf.generatePrivate(spec);
//        byte[] signCertByte = Files.readAllBytes(Paths.get(signMerPubKeyPath));
//        byte[] signCertBytes = parseDERFromPEM(signCertByte, "-----BEGIN CERTIFICATE-----", "-----END CERTIFICATE-----");
//        X509Certificate signCert = generateCertificateFromDER(signCertBytes);
//        signCert.checkValidity();
//        System.out.println("signCert:" + JSON.toJSONString(signCert));
//        // 签名
//        ElementProxy.setDefaultPrefix(Constants.SignatureSpecNS, "ds");
//        DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
//        dbf.setNamespaceAware(true);
//        Element root = xmlDoc.getDocumentElement();
//        XMLSignature sig = new XMLSignature(xmlDoc, "file:", XMLSignature.ALGO_ID_SIGNATURE_RSA);
//        root.appendChild(sig.getElement());
//        Transforms transforms = new Transforms(xmlDoc);
//        transforms.addTransform(Transforms.TRANSFORM_ENVELOPED_SIGNATURE);
//        transforms.addTransform(Transforms.TRANSFORM_C14N_OMIT_COMMENTS);
//        sig.addDocument("", transforms, Constants.ALGO_ID_DIGEST_SHA1);
//        KeyInfo info = sig.getKeyInfo();
//        X509Data x509data = new X509Data(xmlDoc);
//        x509data.add(new XMLX509IssuerSerial(xmlDoc, signCert));
//        x509data.add(new XMLX509Certificate(xmlDoc, signCert));
//        System.out.println("x509data:" + JSON.toJSONString(x509data));
//        info.add(x509data);
//        System.out.println("info:" + JSON.toJSONString(info));
//        sig.sign(privateKey);
//        System.out.println("sig:" + JSON.toJSONString(sig));
//        // 加载加密证书
//        byte[] encryptCertByte = Files.readAllBytes(Paths.get(encryptionBankPubPath));
//        byte[] encryptCertBytes = parseDERFromPEM(encryptCertByte, "-----BEGIN CERTIFICATE-----", "-----END CERTIFICATE-----");
//        X509Certificate encryptSignCert = generateCertificateFromDER(encryptCertBytes);
//        encryptSignCert.checkValidity();
//        PublicKey publicKey = encryptSignCert.getPublicKey();
//        // 加密
//        KeyGenerator keyGenerator = KeyGenerator.getInstance("DESede");
//        Key symmetricKey = keyGenerator.generateKey();
//        String algorithmURI = XMLCipher.RSA_v1dot5;
//        XMLCipher keyCipher = XMLCipher.getInstance(algorithmURI);
//        keyCipher.init(XMLCipher.WRAP_MODE, publicKey);
//        EncryptedKey encryptedKey = keyCipher.encryptKey(xmlDoc, symmetricKey);
//        Element rootElement = xmlDoc.getDocumentElement();
//        algorithmURI = XMLCipher.TRIPLEDES;
//        XMLCipher xmlCipher = XMLCipher.getInstance(algorithmURI);
//        xmlCipher.init(XMLCipher.ENCRYPT_MODE, symmetricKey);
//        EncryptedData encryptedData = xmlCipher.getEncryptedData();
//        KeyInfo keyInfo = new KeyInfo(xmlDoc);
//        keyInfo.add(encryptedKey);
//        encryptedData.setKeyInfo(keyInfo);
//        xmlCipher.doFinal(xmlDoc, rootElement, false);
//        // 转换报文
//        TransformerFactory tf = TransformerFactory.newInstance();
//        Transformer transformer = tf.newTransformer();
//
//        transformer.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION, "yes");
//        StringWriter writer = new StringWriter();
//        transformer.transform(new DOMSource(xmlDoc), new StreamResult(writer));
//        return writer.getBuffer().toString();
//    }
//
//    @SuppressWarnings("rawtypes")
//    public static void generatorSm2KeyPairTest() throws Exception {
//        Map keyPair = GMUtils.generateSm2KeyPair();
//        System.out.println("Private Key: " + keyPair.get(GMUtils.PRIVATEKEY));
//        System.out.println("Public Key: " + keyPair.get(GMUtils.PUBLICKEY));
//    }
//
//    public static void main(String[] args) throws Exception {
///*
//
//        String.valueOf(System.currentTimeMillis());
//        Map<String, String> map = new TreeMap<>();
//
//        String requestData = "{\"itineraryTickerNumber\":\"1501\"}";
//        String aesKey = "c363fca0b580750f";
//        String aesIV = "750bd40e24dce480";
//        String appId = "app1";
//        String secretKey = "1D3C357C3B123928E05355B5DD0BC3A7";
//
//        Key key = new SecretKeySpec(aesKey.getBytes(StandardCharsets.UTF_8), "AES");
//        AlgorithmParameterSpec spec = new IvParameterSpec(aesIV.getBytes(StandardCharsets.UTF_8));
//        Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5Padding");
//
//        cipher.init(Cipher.ENCRYPT_MODE, key, spec);
//        byte[] encrypted = cipher.doFinal(requestData.getBytes(StandardCharsets.UTF_8));
//
//        String aesResult = Base64.getEncoder().encodeToString(encrypted);
//        System.out.println("aesResult = " + aesResult);
//
//        String newData = "appId=app1&data=C7M45ha+KTZZRSvf2rbdnhFP8uM7/yKOEIMW4MCPmSy/U1Vj1Bte6wQmA5q/qmSd&timestamp=1686115503281&secretKey=1D3C357C3B123928E05355B5DD0BC3A7";
//
//        try {
//            Mac mac = Mac.getInstance("HmacSHA1");
//            SecretKeySpec secret = new SecretKeySpec(secretKey.getBytes(StandardCharsets.UTF_8), "HmacSHA1");
//            mac.init(secret);
//            byte[] bytes = mac.doFinal(newData.getBytes(StandardCharsets.UTF_8));
//            String shaResult = Base64.getEncoder().encodeToString(bytes);
//            System.out.println("HmacSHA = " + shaResult);
//        } catch (NoSuchAlgorithmException | InvalidKeyException e) {
//            e.printStackTrace();
//        }
//
//
//        Map<String, String> map = new HashMap<>();
//
//        ZhongHangXin zhongHangXin = new ZhongHangXin();
//        zhongHangXin.test();
//
//
////            String key = "-----BEGIN PRIVATE KEY-----\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQg8kiOMKGn3g7TedCc\nvOYuIFNVQ2KXwEuZZlzVw3iJ/JChRANCAAR1QRBrjENRRVUtxCSxE4k8AN7nk1RQ\n0tnHfOA173gQSIKIsFOBKKUOlC2SNHqhXz8+R7qwcwJh46HGeMHURPFZ\n-----END PRIVATE KEY-----";
////            String cert = "-----BEGIN CERTIFICATE-----\nMIICbTCCAhOgAwIBAgIUfjTx9Ekc31n/pUJRmq20YzfZDBgwCgYIKoZIzj0EAwIw\nYjELMAkGA1UEBhMCQ04xETAPBgNVBAgTCEJlaSBKaW5nMREwDwYDVQQHEwhCZWkg\nSmluZzEUMBIGA1UEChMLY3FyZC52My5jb20xFzAVBgNVBAMTDmNhLmNxcmQudjMu\nY29tMCAXDTIzMDYyNjAzNDAwMFoYDzIwNzMwNjEzMDM0MDAwWjAgMQ8wDQYDVQQL\nEwZjbGllbnQxDTALBgNVBAMTBGRwdjMwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\nAAR1QRBrjENRRVUtxCSxE4k8AN7nk1RQ0tnHfOA173gQSIKIsFOBKKUOlC2SNHqh\nXz8+R7qwcwJh46HGeMHURPFZo4HmMIHjMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMB\nAf8EAjAAMB0GA1UdDgQWBBSGbKBkdoEeDTUfaIseLXXaIeuA6zAfBgNVHSMEGDAW\ngBQhvMRtOT8jXTj9ro+tGExlVuY0TTAeBgNVHREEFzAVghNiY3AtZjk4NDliNzU0\nLXJ0emN4MGMGCCoDBAUGBwgBBFd7ImF0dHJzIjp7ImNuIjoiZHB2MyIsImhmLkFm\nZmlsaWF0aW9uIjoiIiwiaGYuRW5yb2xsbWVudElEIjoiZHB2MyIsImhmLlR5cGUi\nOiJjbGllbnQifX0wCgYIKoZIzj0EAwIDSAAwRQIhAM4PpbvcF3xkBNLi77UgAD87\nVylM66M0wHgkmd/GZqISAiAyZOUoGFSltFdIamTNAY95v+Cd5cZBibDSjFuYD85Y\nTQ==\n-----END CERTIFICATE-----";
////            String cacert = "-----BEGIN CERTIFICATE-----\nMIICDDCCAbOgAwIBAgIUXScqWRDrC/rVDKEooNJ0ZWpVUFAwCgYIKoZIzj0EAwIw\nYjELMAkGA1UEBhMCQ04xETAPBgNVBAgTCEJlaSBKaW5nMREwDwYDVQQHEwhCZWkg\nSmluZzEUMBIGA1UEChMLY3FyZC52My5jb20xFzAVBgNVBAMTDmNhLmNxcmQudjMu\nY29tMCAXDTIzMDYyNjAzNDAwMFoYDzIwNzMwNjEzMDM0MDAwWjBiMQswCQYDVQQG\nEwJDTjERMA8GA1UECBMIQmVpIEppbmcxETAPBgNVBAcTCEJlaSBKaW5nMRQwEgYD\nVQQKEwtjcXJkLnYzLmNvbTEXMBUGA1UEAxMOY2EuY3FyZC52My5jb20wWTATBgcq\nhkjOPQIBBggqhkjOPQMBBwNCAATEJch9ocoj006AgqeGnYV14+PN2eUBXVdeAh2N\ng4atn/FPUG5VDttVn12rvwjmOC8WhspVIMx9wwXOHxjVnjT7o0UwQzAOBgNVHQ8B\nAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIBATAdBgNVHQ4EFgQUIbzEbTk/I104\n/a6PrRhMZVbmNE0wCgYIKoZIzj0EAwIDRwAwRAIgRtkfWPKMvjAZSTzlDbjFWheF\nRGFLxZt6lILw4ugm+CUCIGBdVYgqS8oNk21P2TsjH5p9YGo3QsFI0rpXHoLCvi4v\n-----END CERTIFICATE-----";
////            GatewayClient c = new GatewayClient("https://chainsky.travelsky.com.cn/gateway/v3", "fabric2.5", "CqrdMSP", key, cert, new String[]{cacert});
////            System.out.println(JSON.toJSONString(c));
////            byte[] res = c.Evaluate("pub", "dpv3", "query", new String[]{"xlhuang"});
////            System.out.println(new String(res));
////            byte[] res1 = c.Submit("pub", "dpv3", "save", new String[]{"xlhuang"});
////            System.out.println(new String(res1));
////            c.Evaluate("pub", "qscc", "GetChainInfo", new String[]{"pub"});
//
//
//
//*/
//
//        /*
//        String uuid = UUID.randomUUID().toString();
//        String seed = uuid.replace("-", "");
//        String clientId = "1qdefqo6vxxfzi8f3pe2ifd8khaqal8q";
//        String appSecret = "MZX9CABR5PNTKOMN9XJ2D5Q3LHQPODXX";
//        Mac sha256Mac = Mac.getInstance("HmacSHA256");
//        SecretKeySpec secretKeySpec = new SecretKeySpec(appSecret.getBytes(StandardCharsets.UTF_8), "HmacSHA256");
//        sha256Mac.init(secretKeySpec);
//        byte[] signatureData = sha256Mac.doFinal(String.format("%s^%s", clientId, seed).getBytes(StandardCharsets.UTF_8));
//        StringBuffer stringBuffer = new StringBuffer();
//        for (int i = 0; i < signatureData.length; ++i) {
//            stringBuffer.append(String.format("%02x", signatureData[i]));
//        }
//        String sign = stringBuffer.toString();
//        String url = "http://119.254.234.92:29080/chainsky-app/api/v2/token/";
//        String json = "{\"clientId\":\"" + clientId + "\",\"seed\":\"" + seed + "\",\"signature\":\"" + sign + "\",\"grantType\":\"client_credentials\"}";
//        String result = HttpUtils.doPostJson(url, json);
//        System.out.println(result);
//*/
//
//
//        /*
//        generatorSm2KeyPairTest();
//
//        String privateKeyStr = "87cb26001ec46a882450aadde557e1c39da96cc6da18477d183a309e3b3c1376";
//        String pubKeyStr = "03cc5975805a7ddfd605a0dfdcd15f1e8a8dacff03f02b2e9c2d545055c26343ba";
//        PrivateKey privateKey = GMUtils.parse2PrivateKey(privateKeyStr);
//        PublicKey publicKey = GMUtils.parse2PublicKey(pubKeyStr);
//
//        String test = "测试文本";
//        byte[] s = test.getBytes();
//        byte[] e = GMUtils.encryBySM2(s, publicKey, false);
//        byte[] p = GMUtils.decryptBySM2(e, privateKey, false);
//        System.out.println("解密后的明文:" + new String(p, StandardCharsets.UTF_8));
//*/
//
//        //Private Key: 2afa59427aa77f6a44185295bf47c65dc82454928f8404c4309c98d7a7c37173
//        //Public Key: 02eb68688fe4ccb863f83a0ca487edd8716aaedcd8b6707364fb8cd8a4cc7c93dc
//        //Private Key: 30cf80db13c032af284ae221c3ad8ad9a877e2526f8430c167798bc29f08fad5
//        //Public Key: 02ad190da790e7ebb1529257cf994e752c155b337a0ff4cfbbb8d60e9b29ed3fce
//        //Private Key: ee40c82ad3112af66855ab85ac694521d4db2246a0888ff43f1fe46a36f53ad3
//        //Public Key: 02c893918e9287a552bf9d5709a29ece77c713aa4940b4886f46f87da267a60af8
//
///*
//        String filePath = "D:\\document\\jiaoxian\\电子凭证\\河北电子票据\\ofd文件\\test1.ofd";
//        String base64 = "" + "";
//        File file = new File(filePath);
//        byte[] buffer;
//        try {
//            BASE64Decoder base64Decoder = new BASE64Decoder();
//            buffer = base64Decoder.decodeBuffer(base64);
//            FileOutputStream out = new FileOutputStream(filePath);
//            out.write(buffer);
//            out.close();
//        } catch (Exception ee) {
//            System.out.println("异常:" + ee.getMessage());
//            //Log.e("TAG", "异常信息:" + e.getMessage());
//        }
//
//        System.out.println(file.getPath());
//*/
//
//
//    }
//
//}
